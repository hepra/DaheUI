using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using UIFrameworkCore.Settings;

namespace 自动生成数据库后台管理程序
{
    class Program
    {

        static void Main(string[] args)
        {
            try
            {
                GenerateDataBase();
                GenerateUII();
                修改Main函数();
                修改管理中心首页();
                Console.WriteLine("生成完毕!");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString()
                    );
            }
            Console.ReadLine();
        }
        static void GenerateDataBase()
        {
            Assembly assembly = Assembly.LoadFile(SettingManager.GetSettingSingleton().ExecutePath + "UIFrameworkCore.dll");
            Type[] _TypeList = assembly.GetTypes();
            StringBuilder code = new StringBuilder();
            code.AppendLine("using System;");
            code.AppendLine("using System.Collections.Generic;");
            code.AppendLine("using System.Linq;");
            code.AppendLine(" using System.Reflection;");
            code.AppendLine(" using System.Text;");
            code.AppendLine(" using System.Threading.Tasks;");
            code.AppendLine(" using UIFrameworkCore.Settings;");

            code.AppendLine("namespace Plugins.ManageCenter.Auto");
            code.AppendLine(" {");
            code.AppendLine("  public static class GenerarteDataBase");
            code.AppendLine(" {");
            code.AppendLine("  public static void GenerateDataBase()");
            code.AppendLine("    {");
            for (int i = 0; i != _TypeList.Length; i++)
            {
                if (_TypeList[i].Namespace == "UIFrameworkCore.Model.DataBase")
                {
                    code.AppendLine($"UIFrameworkCore.Helper.SqliteHelper.CreateTable<UIFrameworkCore.Model.DataBase.{_TypeList[i].Name}>();");
                }
            }

            code.AppendLine("    }");

            code.AppendLine("    }");

            code.AppendLine("    }");

            UIFrameworkCore.Helper.FileHelper.SaveFile_Create(SettingManager.GetSettingSingleton().ExecutePath.Split(new string[] { "自动生成数据库后台管理程序" }, StringSplitOptions.RemoveEmptyEntries)[0]+@"Plugins.ManageCenter\Auto\GenerarteDataBase.cs", code.ToString());
        }
        static void GenerateUII()
        {
            Assembly assembly = Assembly.LoadFile(SettingManager.GetSettingSingleton().ExecutePath + "UIFrameworkCore.dll");
            Type[] _TypeList = assembly.GetTypes();
            for (int i = 0; i != _TypeList.Length; i++)
            {
                if (_TypeList[i].Namespace == "UIFrameworkCore.Model.DataBase")
                {
                    #region 前台代码
                    string str = "";
                    str += "<UserControl x:Class=\"Plugins.ManageCenter." + _TypeList[i].Name + "PageControl\" ";
                    str += "\r\n            xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"";
                    str += "\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"";
                    str += "\r\n              xmlns:li=\"http://github.com/zeluisping/loadingIndicators/xaml/controls\"";
                    str += "\r\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" ";
                    str += "\r\n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" ";
                    str += "\r\n             xmlns:local=\"clr-namespace:Plugins.ManageCenter\"";
                    str += "\r\n             mc:Ignorable=\"d\" >";
                    str += "\r\n    <UserControl.Resources>";
                    str += "\r\n    <ResourceDictionary>";
                    str += "\r\n        <ResourceDictionary.MergedDictionaries>";
                    str += "\r\n            <ResourceDictionary Source=\"/Plugins.ManageCenter;component/Themes/Generic.xaml\" />";
                    str += "\r\n        </ResourceDictionary.MergedDictionaries>";
                    str += "\r\n            <Style TargetType=\"TextBlock\" >";
                    str += "\r\n                <Setter Property=\"Foreground\" Value=\"#333\"></Setter>";
                    str += "\r\n                <Setter Property=\"FontSize\" Value=\"18\"></Setter>";
                    str += "\r\n                <Setter Property=\"FontWeight\" Value=\"Bold\"></Setter>";
                    str += "\r\n                <Setter Property=\"FontFamily\" Value=\"微软雅黑\"></Setter>";
                    str += "\r\n                <Setter Property=\"VerticalAlignment\" Value=\"Center\"></Setter>";
                    str += "\r\n";
                    str += "\r\n                <Setter Property=\"HorizontalAlignment\" Value=\"Right\"></Setter>";
                    str += "\r\n                <Setter Property=\"Margin\" Value=\"0,0,10,0\"></Setter>";
                    str += "\r\n                <Setter Property=\"TextAlignment\" Value=\"Right\"></Setter>";
                    str += "\r\n            </Style>";
                    str += "\r\n        </ResourceDictionary>";
                    str += "\r\n    </UserControl.Resources>";
                    str += "\r\n    <Grid Background=\"#F1F1F1\"  >";
                    str += "\r\n        <Viewbox Name=\"viewSubject\"  Visibility=\"Visible\" Grid.Row=\"1\" Stretch=\"Fill\">";
                    str += "\r\n            <Grid  Height=\"1080\" Width=\"1920\"  >";
                    str += "\r\n                <Grid  Background=\"#F4F4F4\"  Name=\"grid管理员模式\"  Visibility=\"Visible\">";
                    str += "\r\n                    <Grid.RowDefinitions>";
                    str += "\r\n                        <RowDefinition Height=\"60\" ></RowDefinition>";
                    str += "\r\n                        <RowDefinition Height=\"*\"></RowDefinition>";
                    str += "\r\n                        <RowDefinition Height=\"60\" ></RowDefinition>";
                    str += "\r\n                    </Grid.RowDefinitions>";
                    str += "\r\n                    <Grid  >";
                    str += "\r\n                        <Grid.ColumnDefinitions>";
                    str += "\r\n                            <ColumnDefinition Width=\"850\"></ColumnDefinition>";
                    str += "\r\n                            <ColumnDefinition></ColumnDefinition>";
                    str += "\r\n                            <ColumnDefinition Width=\"160\"></ColumnDefinition>";
                    str += "\r\n                        </Grid.ColumnDefinitions>";
                    str += "\r\n                        <Border  Height=\"60\" Background=\"#F1F1F1\"  CornerRadius=\"30\" Width=\"800\" >";
                    str += "\r\n                            <Grid Margin=\"5,0,0,0\">";
                    str += "\r\n                                <Grid.ColumnDefinitions>";
                    str += "\r\n                                    <ColumnDefinition Width=\"60\"></ColumnDefinition>";
                    str += "\r\n                                    <ColumnDefinition Width=\"*\"></ColumnDefinition>";
                    str += "\r\n                                    <ColumnDefinition  Width=\"250\"></ColumnDefinition>";
                    str += "\r\n                                </Grid.ColumnDefinitions>";
                    str += "\r\n                                <TextBlock  Text=\"\" Grid.Column=\"0\"></TextBlock>";
                    str += "\r\n";
                    str += "\r\n                                <Image Source=\"/Plugins.ManageCenter;component/view/img/搜索8a.png\" Height=\"20\"></Image>";
                    str += "\r\n                                <TextBox Grid.Column=\"1\" Tag=\"输入查询条件\"  Name=\"tbName\"   VerticalAlignment=\"Center\"  FontSize=\"20\" ";            
                    str += "\r\n                                     Height=\"30\"   BorderThickness=\"1\" Margin=\"5\" Background=\"#F1F1F1\"></TextBox>";
                    str += "\r\n                                <StackPanel Orientation=\"Horizontal\" Grid.Column=\"2\" HorizontalAlignment=\"Right\" Margin=\"0,0,20,0\">";
                    str += "\r\n                                    <Button Click=\"数据库搜索时删除\" Margin=\"20,0\"  Cursor=\"Hand\">";
                    str += "\r\n                                        <Button.Template>";
                    str += "\r\n                                            <ControlTemplate>";
                    str += "\r\n                                                <Image Source=\"/Plugins.ManageCenter;component/view/img/删除.png\" Height=\"20\"></Image>";
                    str += "\r\n                                            </ControlTemplate>";
                    str += "\r\n                                        </Button.Template>";
                    str += "\r\n                                    </Button>";
                    str += "\r\n                                    <Button HorizontalAlignment=\"Left\"  Height=\"50\" Width=\"120\"   Click=\"数据库搜索\"  Cursor=\"Hand\" >";
                    str += "\r\n                                        <Button.Template>";
                    str += "\r\n                                            <ControlTemplate>";
                    str += "\r\n                                                <Image x:Name=\"img\" Source=\"/Plugins.ManageCenter;component/view/img/搜索.png\" Height=\"30\">";
                    str += "\r\n                                                    <Image.Triggers>";
                    str += "\r\n                                                        <EventTrigger RoutedEvent=\"Loaded\">";
                    str += "\r\n                                                            <BeginStoryboard>";
                    str += "\r\n                                                                <Storyboard>";
                    str += "\r\n                                                                    <DoubleAnimation Duration=\"0:0:0.5\"  From=\"30\"";
                    str += "\r\n                                                                                 To=\"40\" Storyboard.TargetName=\"img\" Storyboard.TargetProperty=\"Height\"  RepeatBehavior=\"Forever\" AutoReverse=\"True\">";
                    str += "\r\n                                                                      </DoubleAnimation>";
                    str += "\r\n                                                                  </Storyboard>";
                    str += "\r\n                                                              </BeginStoryboard>";
                    str += "\r\n                                                          </EventTrigger>";
                    str += "\r\n                                                      </Image.Triggers>";
                    str += "\r\n                                                  </Image>";
                    str += "\r\n                                              </ControlTemplate>";
                    str += "\r\n                                          </Button.Template>";
                    str += "\r\n  ";
                    str += "\r\n                                      </Button>";
                    str += "\r\n                                  </StackPanel>";
                    str += "\r\n                              </Grid>";
                    str += "\r\n                          </Border>";
                    str += "\r\n                          <Button  Height=\"40\" Width=\"150\"   FontSize=\"20\" Content=\"添加\"  Cursor=\"Hand\" Grid.Column=\"2\"";
                    str += "\r\n                               Click=\"新增数据库数据\" Foreground=\"White\" >";
                    str += "\r\n                              <Button.Template>";
                    str += "\r\n                                  <ControlTemplate>";
                    str += "\r\n                                      <Border BorderThickness=\"1\" CornerRadius=\"5\" BorderBrush=\"{StaticResource niceBlue}\" Background=\"#F1F1F1\">";   
                    str += "\r\n                                          <Grid>";
                    str += "\r\n                                              <Grid.ColumnDefinitions>";
                    str += "\r\n                                                  <ColumnDefinition Width=\"40\"></ColumnDefinition>";
                    str += "\r\n                                                  <ColumnDefinition Width=\"*\"></ColumnDefinition>";
                    str += "\r\n                                              </Grid.ColumnDefinitions>";
                    str += "\r\n                                              <Image x:Name=\"img\" Source=\"/Plugins.ManageCenter;component/view/img/新增.png\" Height=\"30\"></Image>";
                    str += "                                            <TextBlock Text=\"添加\" Foreground=\"{StaticResource niceBlue}\" Grid.Column=\"1\" VerticalAlignment=\"Center\" Margin=\"10,0,0,0\" HorizontalAlignment=\"Center\"></TextBlock>";
                    str += "\r\n                                          </Grid>";
                    str += "\r\n                                      </Border>";
                    str += "\r\n  ";
                    str += "\r\n                                  </ControlTemplate>";
                    str += "\r\n                              </Button.Template>";
                    str += "\r\n                          </Button>";
                    str += "\r\n                      </Grid>";
                    str += "\r\n                      <DataGrid Grid.Row=\"1\" ";
                    str += "\r\n                          Width=\"auto\"  Margin=\"0,0\"";
                    str += "\r\n                            AutoGeneratingColumn=\"OnAutoGeneratingColumn\" x:Name=\"myDataGrid\"";
                    str += "\r\n                          ItemsSource=\"{Binding CurrentPageList,Mode=TwoWay}\"   BorderBrush=\"LightGray\" BorderThickness=\"1\" CanUserAddRows=\"False\">";
                    str += "\r\n                        <DataGrid.Columns>";
                    str += "\r\n                            <DataGridTemplateColumn  >";
                    str += "\r\n                                <DataGridTemplateColumn.Header  >";
                    str += "\r\n                                    <TextBlock VerticalAlignment=\"Center\" Width=\"150\"   TextAlignment=\"Center\" Text=\"操作\" ></TextBlock>";
                    str += "\r\n                                </DataGridTemplateColumn.Header>";
                    str += "\r\n                                <DataGridTemplateColumn.CellTemplate>";
                    str += "\r\n                                    <DataTemplate>";
                    str += "\r\n                                        <StackPanel Orientation=\"Horizontal\" >";
                    str += "\r\n                                            <Button  Height=\"30\" Width=\"60\"   Content=\"删除\"";
                    str += "\r\n                                                 Click=\"btn操作数据库_Click\"     Cursor=\"Hand\"";
                    str += "\r\n                                                 >";
                    str += "\r\n                                                <Button.Template>";
                    str += "\r\n                                                    <ControlTemplate>";
                    str += "\r\n                                                        <Image Source=\"/Plugins.ManageCenter;component/view/img/删除.png\" Height=\"20\"></Image>";
                    str += "\r\n                                                    </ControlTemplate>";
                    str += "\r\n                                                </Button.Template>";
                    str += "\r\n                                            </Button>";
                    str += "\r\n                                            <Button  Height=\"30\" Width=\"60\"  Foreground=\"White\"  Content=\"更新\"  ";
                    str += "\r\n                                                 Click=\"btn操作数据库_Click\"   Cursor=\"Hand\"";
                    str += "\r\n                                                 Margin=\"20,0\">";
                    str += "\r\n                                                <Button.Template>";
                    str += "\r\n                                                    <ControlTemplate>";
                    str += "\r\n                                                        <Image Source=\"/Plugins.ManageCenter;component/view/img/编辑.png\" Height=\"20\"></Image>";
                    str += "\r\n                                                    </ControlTemplate>";
                    str += "\r\n                                                </Button.Template>";
                    str += "\r\n                                            </Button>";
                    str += "\r\n                                        </StackPanel>";
                    str += "\r\n                                    </DataTemplate>";
                    str += "\r\n                                </DataGridTemplateColumn.CellTemplate>";
                    str += "\r\n                            </DataGridTemplateColumn>";
                    str += "\r\n                        </DataGrid.Columns>";
                    str += "\r\n                    </DataGrid>";
                    str += "\r\n                    <Grid Grid.Row=\"2\" VerticalAlignment=\"Center\">";
                    str += "\r\n                        <Grid.ColumnDefinitions>";
                    str += "\r\n                            <ColumnDefinition Width=\"60\"></ColumnDefinition>";
                    str += "\r\n                            <ColumnDefinition></ColumnDefinition>";
                    str += "\r\n                            <ColumnDefinition></ColumnDefinition>";
                    str += "\r\n                            <ColumnDefinition></ColumnDefinition>";
                    str += "\r\n                            <ColumnDefinition Width=\"60\"></ColumnDefinition>";
                    str += "\r\n                        </Grid.ColumnDefinitions>";
                    str += "\r\n                        <Button Grid.Row=\"1\"   Grid.Column=\"1\"  Width='150' Height=\"40\"";
                    str += "\r\n                    VerticalAlignment=\"Center\"";
                    str += "\r\n                    Content=\"上一页\"  HorizontalAlignment=\"Center\"  Cursor=\"Hand\"";
                    str += "\r\n                             Click=\"上一页\"  Margin=\"50,0,50,0\"  Visibility=\"{Binding 上一页Visibility}\"";
                    str += "\r\n                            Foreground=\"White\"  FontSize=\"20\" ></Button>";
                    str += "\r\n                        <TextBlock Grid.Column=\"2\" Width=\"500\" FontSize=\"30\" Foreground=\"#333\"  Visibility=\"{Binding 上一页Visibility}\"    VerticalAlignment=\"Center\" HorizontalAlignment=\"Center\"  TextAlignment=\"Center\"><Run Text=\"{Binding PageIndex}\"></Run> / <Run Text=\"{Binding TotalPage}\"></Run></TextBlock>";
                    str += "\r\n                        <Button Grid.Row=\"1\"   Grid.Column=\"3\"  Width='150' Height=\"40\" Content=\"下一页\"  HorizontalAlignment=\"Center\"";
                    str += "\r\n                           Cursor=\"Hand\"  VerticalAlignment=\"Center\"";
                    str += "\r\n                               Margin=\"50,0,50,0\" Visibility=\"{Binding 下一页Visibility}\" Click=\"下一页\"";
                    str += "\r\n                            Foreground=\"White\"  FontSize=\"20\" ></Button>";
                    str += "\r\n                    </Grid>";
                    str += "\r\n";
                    str += "\r\n";
                    str += "\r\n                </Grid>";
                    str += "\r\n                <Grid Grid.ColumnSpan=\"5\"   Visibility=\"Collapsed\"   IsVisibleChanged=\"Grid_IsVisibleChanged\" Name=\"gridLoading\">";
                    str += "\r\n                    <Border Background=\"#999\" Opacity=\"0.7\"></Border>";
                    str += "\r\n                    <Grid HorizontalAlignment=\"Center\">";
                    str += "\r\n                        <StackPanel Margin=\"5\" Orientation=\"Horizontal\">";
                    str += "\r\n                            <li:LoadingIndicator SpeedRatio=\"1.5\" IsActive=\"{Binding IsArcsActive}\" Mode=\"Arcs\" Name=\"loading\" ></li:LoadingIndicator>";
                    str += "\r\n                            <TextBlock HorizontalAlignment=\"Center\" Margin=\"10,0,0,0\">正在载入资源,请稍候...</TextBlock>";
                    str += "\r\n                        </StackPanel>";
                    str += "\r\n                    </Grid>";
                    str += "\r\n                </Grid>";
                    str += "\r\n            </Grid>";
                    str += "\r\n        </Viewbox>";
                    str += "\r\n";
                    str += "\r\n    </Grid>";
                    str += "\r\n</UserControl>";

                    UIFrameworkCore.Helper.FileHelper.SaveFile_Create(SettingManager.GetSettingSingleton().ExecutePath.Split(new string[] { "自动生成数据库后台管理程序" }, StringSplitOptions.RemoveEmptyEntries)[0]+@"Plugins.ManageCenter\" + _TypeList[i].Name + "PageControl.xaml", str);
                    #endregion

                    #region 后台代码

                    str = "";
                    str += "\r\nusing Newtonsoft.Json;";
                    str += "\r\nusing System;";
                    str += "\r\nusing System.Collections.Generic;";
                    str += "\r\nusing System.Collections.ObjectModel;";
                    str += "\r\nusing System.ComponentModel;";
                    str += "\r\nusing System.Windows;";
                    str += "\r\nusing System.Windows.Controls;";
                    str += "\r\nusing UIFrameworkCore.Model;";
                    str += "\r\nusing UIFrameworkCore.Model.DataBase;";
                    str += "\r\nusing UIFrameworkCore.Settings;";
                    str += "\r\n";
                    str += "\r\nnamespace Plugins.ManageCenter";
                    str += "\r\n{";
                    str += "\r\n    public class "+ _TypeList[i].Name +"PageViewModel<T> : DMSkin.Core.ViewModelBase";
                    str += "\r\n    {";
                    str += "\r\n        private ObservableCollection<T> _CurrentPageList = new ObservableCollection<T>();";
                    str += "\r\n        public ObservableCollection<T> CurrentPageList";
                    str += "\r\n        {";
                    str += "\r\n            get { return _CurrentPageList; }";
                    str += "\r\n            set";
                    str += "\r\n            {";
                    str += "\r\n                _CurrentPageList = value;";
                    str += "\r\n                OnPropertyChanged(nameof(CurrentPageList));";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n        private T _CurrentPerson;";
                    str += "\r\n        public T CurrentPerson";
                    str += "\r\n        {";
                    str += "\r\n            get { return _CurrentPerson; }";
                    str += "\r\n            set";
                    str += "\r\n            {";
                    str += "\r\n                _CurrentPerson = value;";
                    str += "\r\n                OnPropertyChanged(nameof(CurrentPerson));";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n        private SqliteSeverMsgModel _MsgModel;";
                    str += "\r\n        public SqliteSeverMsgModel MsgModel";
                    str += "\r\n        {";
                    str += "\r\n            get { return _MsgModel; }";
                    str += "\r\n            set";
                    str += "\r\n            {";
                    str += "\r\n                _MsgModel = value;";
                    str += "\r\n                OnPropertyChanged(nameof(MsgModel));";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n        private int _PageIndex;";
                    str += "\r\n        public int PageIndex";
                    str += "\r\n        {";
                    str += "\r\n            get { return _PageIndex; }";
                    str += "\r\n            set";
                    str += "\r\n            {";
                    str += "\r\n                _PageIndex = value;";
                    str += "\r\n                OnPropertyChanged(nameof(PageIndex));";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n        private int _TotalPage;";
                    str += "\r\n        public int TotalPage";
                    str += "\r\n        {";
                    str += "\r\n            get { return _TotalPage; }";
                    str += "\r\n            set";
                    str += "\r\n            {";
                    str += "\r\n                _TotalPage = value;";
                    str += "\r\n                OnPropertyChanged(nameof(TotalPage));";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n        private Visibility _上一页Visibility;";
                    str += "\r\n        public Visibility 上一页Visibility";
                    str += "\r\n        {";
                    str += "\r\n            get { return _上一页Visibility; }";
                    str += "\r\n            set";
                    str += "\r\n            {";
                    str += "\r\n                _上一页Visibility = value;";
                    str += "\r\n                OnPropertyChanged(nameof(上一页Visibility));";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n        private Visibility _下一页Visibility;";
                    str += "\r\n        public Visibility 下一页Visibility";
                    str += "\r\n        {";
                    str += "\r\n            get { return _下一页Visibility; }";
                    str += "\r\n            set";
                    str += "\r\n            {";
                    str += "\r\n                _下一页Visibility = value;";
                    str += "\r\n                OnPropertyChanged(nameof(下一页Visibility));";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n    }";
                    str += "\r\n    public partial class "+ _TypeList[i].Name +"PageControl : UserControl";
                    str += "\r\n    {";
                    str += "\r\n";
                    str += "\r\n        "+ _TypeList[i].Name +"PageViewModel<"+ _TypeList[i].Name +"> _viewModel;";
                    str += "\r\n        SimpleTCP.SimpleTcpClient SQLiteClient;";
                    str += "\r\n        public "+ _TypeList[i].Name +"PageControl()";
                    str += "\r\n        {";
                    str += "\r\n            InitializeComponent();";
                    str += "\r\n            StartSqliteClient();";
                    str += "\r\n            _viewModel = new "+ _TypeList[i].Name +"PageViewModel<"+ _TypeList[i].Name +">();";
                    str += "\r\n            this.DataContext = _viewModel;";
                    str += "\r\n        }";
                    str += "\r\n";
                    str += "\r\n        void StartSqliteClient()";
                    str += "\r\n        {";
                    str += "\r\n            try";
                    str += "\r\n            {";
                    str += "\r\n                SQLiteClient = new SimpleTCP.SimpleTcpClient();";
                    str += "\r\n                SQLiteClient.Connect(SettingManager.GetSettingSingleton().IP数据库同步, SettingManager.GetSettingSingleton().port数据库同步端口);";
                    str += "\r\n                SQLiteClient.DataReceived += SQLiteClient_DataReceived; ;";
                    str += "\r\n            }";
                    str += "\r\n            catch (Exception ex)";
                    str += "\r\n            {";
                    str += "\r\n";
                    str += "\r\n                UIFrameworkCore.SystemManager.ShowMessageDialog(ex.ToString());";
                    str += "\r\n            }";
                    str += "\r\n";
                    str += "\r\n        }";
                    str += "\r\n        private void SQLiteClient_DataReceived(object sender, SimpleTCP.Message e)";
                    str += "\r\n        {";
                    str += "\r\n            if (e.MessageString.Contains(\"MsgModelName\"))";
                    str += "\r\n            {";
                    str += "\r\n                SqliteSeverMsgModel msgModel = JsonConvert.DeserializeObject<SqliteSeverMsgModel>(e.MessageString);";
                    str += "\r\n                switch (msgModel.MsgModelName)";
                    str += "\r\n                {";
                    str += "\r\n                    case \""+ _TypeList[i].Name +"\":";
                    str += "\r\n                        switch (msgModel.MsgType)";
                    str += "\r\n                        {";
                    str += "\r\n                            case \"更新成功\":";
                    str += "\r\n                            case \"添加成功\":";
                    str += "\r\n                            case \"删除成功\":";
                    str += "\r\n                                this.Dispatcher.Invoke(() =>";
                    str += "\r\n                                {";
                    str += "\r\n                                    UIFrameworkCore.SystemManager.ShowMessageDialog(msgModel.MsgType);";
                    str += "\r\n                                });";
                    str += "\r\n                             ";
                    str += "\r\n                                break;";
                    str += "\r\n                            case \"queryresult\":";
                    str += "\r\n                                var msgData = JsonConvert.DeserializeObject<List<"+ _TypeList[i].Name +">>(msgModel.MsgModel);";
                    str += "\r\n                                var resultList = new ObservableCollection<"+ _TypeList[i].Name +">(msgData);";
                    str += "\r\n                                this.Dispatcher.Invoke(()=> {";
                    str += "\r\n                                    _viewModel.CurrentPageList = resultList;";
                    str += "\r\n                                    _viewModel.TotalPage = msgModel.PageTotalCount;";
                    str += "\r\n                                });";
                    str += "\r\n                            ";
                    str += "\r\n                                break;";
                    str += "\r\n                        }";
                    str += "\r\n                        break;";
                    str += "\r\n                }";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n";
                    str += "\r\n        private void 数据库搜索(object sender, RoutedEventArgs e)";
                    str += "\r\n        {";
                    str += "\r\n            _viewModel.CurrentPerson = new "+ _TypeList[i].Name +"() { SearchCondition = tbName.Text};";
                    str += "\r\n            _viewModel.CurrentPageList.Add(_viewModel.CurrentPerson);";
                    str += "\r\n            _viewModel.MsgModel = new SqliteSeverMsgModel()";
                    str += "\r\n            {";
                    str += "\r\n                MsgModel = JsonConvert.SerializeObject(new List<"+ _TypeList[i].Name +">() { _viewModel.CurrentPerson })";
                    str += "\r\n                ,";
                    str += "\r\n                MsgModelName = \""+ _TypeList[i].Name +"\"";
                    str += "\r\n                ,";
                    str += "\r\n                MsgType = \"query\"";
                    str += "\r\n                ,";
                    str += "\r\n                PageInex = _viewModel.PageIndex";
                    str += "\r\n                ,";
                    str += "\r\n                PageCount = SettingManager.GetSettingSingleton().PerPageRecordCount";
                    str += "\r\n                ,";
                    str += "\r\n                PageTotalCount = _viewModel.TotalPage";
                    str += "\r\n            };";
                    str += "\r\n            SQLiteClient.Write(JsonConvert.SerializeObject(_viewModel.MsgModel));";
                    str += "\r\n        }";
                    str += "\r\n        private void btn操作数据库_Click(object sender, RoutedEventArgs e)";
                    str += "\r\n        {";
                    str += "\r\n            if(sender is Button btn)";
                    str += "\r\n            {";
                    str += "\r\n                if(btn.DataContext is "+ _TypeList[i].Name +" soure)";
                    str += "\r\n                {";
                    str += "\r\n                    switch (btn.Content.ToString())";
                    str += "\r\n                    {";
                    str += "\r\n                        case \"更新\":";
                    str += "\r\n                            _viewModel.CurrentPerson = soure;";
                    str += "\r\n                            DataBaseOperationWindow dataBaseOperationWindow = new DataBaseOperationWindow();";
                    str += "\r\n                            dataBaseOperationWindow.InitWindow<"+ _TypeList[i].Name +">(_viewModel.CurrentPerson);";
                    str += "\r\n                            dataBaseOperationWindow.ShowDialog();";
                    str += "\r\n                            //点击更新";
                    str += "\r\n                            if(dataBaseOperationWindow.DialogResult == true)";
                    str += "\r\n                            {";
                    str += "\r\n                                for (int i = 0; i < _viewModel.CurrentPageList.Count; i++)";
                    str += "\r\n                                {";
                    str += "\r\n                                    var item = _viewModel.CurrentPageList[i];";
                    str += "\r\n                                    if (item.Id == _viewModel.CurrentPerson.Id)";
                    str += "\r\n                                    {";
                    str += "\r\n                                        _viewModel.CurrentPageList[i] = _viewModel.CurrentPerson;";
                    str += "\r\n                                    }";
                    str += "\r\n                                }";
                    str += "\r\n                                _viewModel.MsgModel = new SqliteSeverMsgModel()";
                    str += "\r\n                                {";
                    str += "\r\n                                    MsgModel = JsonConvert.SerializeObject(new List<"+ _TypeList[i].Name +">() { _viewModel.CurrentPerson })";
                    str += "\r\n                   ,";
                    str += "\r\n                                    MsgModelName = \""+ _TypeList[i].Name +"\"";
                    str += "\r\n                   ,";
                    str += "\r\n                                    MsgType = \"update\"";
                    str += "\r\n                   ,";
                    str += "\r\n                                    PageInex = _viewModel.PageIndex";
                    str += "\r\n                   ,";
                    str += "\r\n                                    PageCount = SettingManager.GetSettingSingleton().PerPageRecordCount";
                    str += "\r\n                   ,";
                    str += "\r\n                                    PageTotalCount = _viewModel.TotalPage";
                    str += "\r\n                                };";
                    str += "\r\n                                SQLiteClient.Write(JsonConvert.SerializeObject(_viewModel.MsgModel));";
                    str += "\r\n                            }";
                    str += "\r\n                            //点击返回";
                    str += "\r\n                            break;";
                    str += "\r\n                        case \"添加\":";
                    str += "\r\n                            _viewModel.CurrentPerson = new "+ _TypeList[i].Name +"();";
                    str += "\r\n                            DataBaseOperationWindow dataBaseOperationWindowAdd = new DataBaseOperationWindow(\"添加\");";
                    str += "\r\n                            dataBaseOperationWindowAdd.InitWindow<"+ _TypeList[i].Name +">(_viewModel.CurrentPerson);";
                    str += "\r\n                            dataBaseOperationWindowAdd.ShowDialog();";
                    str += "\r\n                            if(dataBaseOperationWindowAdd.DialogResult==true)";
                    str += "\r\n                            {";
                    str += "\r\n                                _viewModel.CurrentPageList.Add(_viewModel.CurrentPerson);";
                    str += "\r\n                                _viewModel.MsgModel = new SqliteSeverMsgModel()";
                    str += "\r\n                                {";
                    str += "\r\n                                    MsgModel = JsonConvert.SerializeObject(new List<"+ _TypeList[i].Name +">() { _viewModel.CurrentPerson })";
                    str += "\r\n                                    ,";
                    str += "\r\n                                    MsgModelName = \""+ _TypeList[i].Name +"\"";
                    str += "\r\n                                    ,";
                    str += "\r\n                                    MsgType = \"add\"";
                    str += "\r\n                                    ,";
                    str += "\r\n                                    PageInex = _viewModel.PageIndex";
                    str += "\r\n                                    ,";
                    str += "\r\n                                    PageCount = SettingManager.GetSettingSingleton().PerPageRecordCount";
                    str += "\r\n                                    ,";
                    str += "\r\n                                    PageTotalCount = _viewModel.TotalPage";
                    str += "\r\n                                };";
                    str += "\r\n                                SQLiteClient.Write(JsonConvert.SerializeObject(_viewModel.MsgModel));";
                    str += "\r\n                            }";
                    str += "\r\n                          ";
                    str += "\r\n                            break;";
                    str += "\r\n                        case \"删除\":";
                    str += "\r\n                            if (MessageBox.Show(\"确认删除吗?\", \"删除提示\", MessageBoxButton.YesNo) == MessageBoxResult.Yes)";
                    str += "\r\n                            {";
                    str += "\r\n                                _viewModel.CurrentPerson =soure;";
                    str += "\r\n                                _viewModel.CurrentPageList.Remove(_viewModel.CurrentPerson);";
                    str += "\r\n                                _viewModel.MsgModel = new SqliteSeverMsgModel()";
                    str += "\r\n                                {";
                    str += "\r\n                                    MsgModel = JsonConvert.SerializeObject(new List<"+ _TypeList[i].Name +">() { _viewModel.CurrentPerson })";
                    str += "\r\n                ,";
                    str += "\r\n                                    MsgModelName = \""+ _TypeList[i].Name +"\"";
                    str += "\r\n                ,";
                    str += "\r\n                                    MsgType = \"delete\"";
                    str += "\r\n                ,";
                    str += "\r\n                                    PageInex = _viewModel.PageIndex";
                    str += "\r\n                ,";
                    str += "\r\n                                    PageCount = SettingManager.GetSettingSingleton().PerPageRecordCount";
                    str += "\r\n                ,";
                    str += "\r\n                                    PageTotalCount = _viewModel.TotalPage";
                    str += "\r\n                                };";
                    str += "\r\n                                SQLiteClient.Write(JsonConvert.SerializeObject(_viewModel.MsgModel));";
                    str += "\r\n                            }";
                    str += "\r\n                            break;";
                    str += "\r\n                    }";
                    str += "\r\n";
                    str += "\r\n                }";
                    str += "\r\n";
                    str += "\r\n            }";
                    str += "\r\n";
                    str += "\r\n        }";
                    str += "\r\n";
                    str += "\r\n        //过滤DataGrid展示的数据";
                    str += "\r\n        private void OnAutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)";
                    str += "\r\n        {";
                    str += "\r\n            PropertyDescriptor propertyDescriptor = (PropertyDescriptor)e.PropertyDescriptor;";
                    str += "\r\n            e.Column.Header = propertyDescriptor.DisplayName;";
                    str += "\r\n";
                    str += "\r\n            //默认字段 不显示";
                    str += "\r\n            if (propertyDescriptor.DisplayName == nameof(_viewModel.CurrentPerson.IsLoad))";
                    str += "\r\n            {";
                    str += "\r\n                e.Cancel = true;";
                    str += "\r\n            }";
                    str += "\r\n            if (propertyDescriptor.DisplayName == nameof(_viewModel.CurrentPerson.Id))";
                    str += "\r\n            {";
                    str += "\r\n                e.Cancel = true;";
                    str += "\r\n            }";
                    str += "\r\n            if (propertyDescriptor.DisplayName == nameof(_viewModel.CurrentPerson.SearchCondition))";
                    str += "\r\n            {";
                    str += "\r\n                e.Cancel = true;";
                    str += "\r\n            }";
                    str += "\r\n            if (propertyDescriptor.DisplayName == nameof(_viewModel.CurrentPerson.DeleteFlag))";
                    str += "\r\n            {";
                    str += "\r\n                e.Cancel = true;";
                    str += "\r\n            }";
                    str += "\r\n            if (propertyDescriptor.DisplayName == nameof(_viewModel.CurrentPerson.CreateDate))";
                    str += "\r\n            {";
                    str += "\r\n                e.Cancel = true;";
                    str += "\r\n            }";
                    str += "\r\n";
                    str += "\r\n            if (propertyDescriptor.DisplayName == nameof(_viewModel.CurrentPerson.Update))";
                    str += "\r\n            {";
                    str += "\r\n                e.Cancel = true;";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n";
                    str += "\r\n        private void 新增数据库数据(object sender, RoutedEventArgs e)";
                    str += "\r\n        {";
                    str += "\r\n            _viewModel.CurrentPerson = new "+ _TypeList[i].Name +"();";
                    str += "\r\n            DataBaseOperationWindow dataBaseOperationWindowAdd = new DataBaseOperationWindow(\"添加\");";
                    str += "\r\n            dataBaseOperationWindowAdd.InitWindow<"+ _TypeList[i].Name +">(_viewModel.CurrentPerson);";
                    str += "\r\n            dataBaseOperationWindowAdd.ShowDialog();";
                    str += "\r\n            if (dataBaseOperationWindowAdd.DialogResult == true)";
                    str += "\r\n            {";
                    str += "\r\n                _viewModel.CurrentPageList.Add(_viewModel.CurrentPerson);";
                    str += "\r\n                _viewModel.MsgModel = new SqliteSeverMsgModel()";
                    str += "\r\n                {";
                    str += "\r\n                    MsgModel = JsonConvert.SerializeObject(new List<"+ _TypeList[i].Name +">() { _viewModel.CurrentPerson })";
                    str += "\r\n                    ,";
                    str += "\r\n                    MsgModelName = \""+ _TypeList[i].Name +"\"";
                    str += "\r\n                    ,";
                    str += "\r\n                    MsgType = \"add\"";
                    str += "\r\n                    ,";
                    str += "\r\n                    PageInex = _viewModel.PageIndex";
                    str += "\r\n                    ,";
                    str += "\r\n                    PageCount = SettingManager.GetSettingSingleton().PerPageRecordCount";
                    str += "\r\n                    ,";
                    str += "\r\n                    PageTotalCount = _viewModel.TotalPage";
                    str += "\r\n                };";
                    str += "\r\n                SQLiteClient.Write(JsonConvert.SerializeObject(_viewModel.MsgModel));";
                    str += "\r\n            }";
                    str += "\r\n";
                    str += "\r\n        }";
                    str += "\r\n";
                    str += "\r\n        private void 数据库搜索时删除(object sender, RoutedEventArgs e)";
                    str += "\r\n        {";
                    str += "\r\n            if (tbName.Text.Length > 0)";
                    str += "\r\n            {";
                    str += "\r\n                tbName.Text = tbName.Text.Substring(0, tbName.Text.Length - 1);";
                    str += "\r\n            }";
                    str += "\r\n";
                    str += "\r\n        }";
                    str += "\r\n        private void Grid_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)";
                    str += "\r\n        {";
                    str += "\r\n            if(gridLoading.Visibility == Visibility.Collapsed)";
                    str += "\r\n            {";
                    str += "\r\n                loading.IsActive = false;";
                    str += "\r\n            }";
                    str += "\r\n            else";
                    str += "\r\n            {";
                    str += "\r\n                loading.IsActive = true;";
                    str += "\r\n            }";
                    str += "\r\n        }";
                    str += "\r\n";
                    str += "\r\n        private void 上一页(object sender, RoutedEventArgs e)";
                    str += "\r\n        {";
                    str += "\r\n            _viewModel.PageIndex--;";
                    str += "\r\n            if (_viewModel.PageIndex < 1)";
                    str += "\r\n            {";
                    str += "\r\n                _viewModel.PageIndex = _viewModel.TotalPage;";
                    str += "\r\n            }";
                    str += "\r\n            if (_viewModel.PageIndex > 1)";
                    str += "\r\n            {";
                    str += "\r\n";
                    str += "\r\n                _viewModel.下一页Visibility = Visibility.Visible;";
                    str += "\r\n            }";
                    str += "\r\n            else";
                    str += "\r\n            {";
                    str += "\r\n                _viewModel.上一页Visibility = Visibility.Collapsed;";
                    str += "\r\n            }";
                    str += "\r\n            _viewModel.CurrentPerson = new "+ _TypeList[i].Name +"() {Id=Guid.NewGuid()};";
                    str += "\r\n            _viewModel.MsgModel = new SqliteSeverMsgModel()";
                    str += "\r\n            {";
                    str += "\r\n                MsgModel = JsonConvert.SerializeObject(new List<"+ _TypeList[i].Name +">() { _viewModel.CurrentPerson })";
                    str += "\r\n                ,";
                    str += "\r\n                MsgModelName = \""+ _TypeList[i].Name +"\"";
                    str += "\r\n                ,";
                    str += "\r\n                MsgType = \"queryPage\"";
                    str += "\r\n                ,";
                    str += "\r\n                PageInex = _viewModel.PageIndex";
                    str += "\r\n                ,";
                    str += "\r\n                PageCount = SettingManager.GetSettingSingleton().PerPageRecordCount";
                    str += "\r\n                ,";
                    str += "\r\n                PageTotalCount = _viewModel.TotalPage";
                    str += "\r\n            };";
                    str += "\r\n            SQLiteClient.Write(JsonConvert.SerializeObject(_viewModel.MsgModel));";
                    str += "\r\n        }";
                    str += "\r\n";
                    str += "\r\n        private void 下一页(object sender, RoutedEventArgs e)";
                    str += "\r\n        {";
                    str += "\r\n            _viewModel.PageIndex++;";
                    str += "\r\n            if (_viewModel.PageIndex > _viewModel.TotalPage)";
                    str += "\r\n            {";
                    str += "\r\n                _viewModel.PageIndex = 1;";
                    str += "\r\n            }";
                    str += "\r\n            if (_viewModel.PageIndex < _viewModel.TotalPage)";
                    str += "\r\n            {";
                    str += "\r\n";
                    str += "\r\n                _viewModel.上一页Visibility = Visibility.Visible;";
                    str += "\r\n            }";
                    str += "\r\n            else";
                    str += "\r\n            {";
                    str += "\r\n                _viewModel.下一页Visibility = Visibility.Collapsed;";
                    str += "\r\n            }";
                    str += "\r\n            _viewModel.CurrentPerson = new "+ _TypeList[i].Name +"() ;";
                    str += "\r\n            _viewModel.MsgModel = new SqliteSeverMsgModel()";
                    str += "\r\n            {";
                    str += "\r\n                MsgModel = JsonConvert.SerializeObject(new List<"+ _TypeList[i].Name +">() { _viewModel.CurrentPerson })";
                    str += "\r\n                ,";
                    str += "\r\n                MsgModelName = \""+ _TypeList[i].Name +"\"";
                    str += "\r\n                ,";
                    str += "\r\n                MsgType = \"queryPage\"";
                    str += "\r\n                ,";
                    str += "\r\n                PageInex = _viewModel.PageIndex";
                    str += "\r\n                ,";
                    str += "\r\n                PageCount = SettingManager.GetSettingSingleton().PerPageRecordCount";
                    str += "\r\n                ,";
                    str += "\r\n                PageTotalCount = _viewModel.TotalPage";
                    str += "\r\n            };";
                    str += "\r\n            SQLiteClient.Write(JsonConvert.SerializeObject(_viewModel.MsgModel));";
                    str += "\r\n        }";
                    str += "\r\n    }";
                    str += "\r\n}";
                    str += "\r\n";

                    UIFrameworkCore.Helper.FileHelper.SaveFile_Create(SettingManager.GetSettingSingleton().ExecutePath.Split(new string[] { "自动生成数据库后台管理程序" }, StringSplitOptions.RemoveEmptyEntries)[0]+@"Plugins.ManageCenter\" + _TypeList[i].Name + "PageControl.xaml.cs", str);
                    #endregion

                }
            }
         

        }

        static void 修改Main函数()
        {
            string str = "";
            str += "\r\nusing EasyFileTransfer;";
            str += "\r\nusing file_transfer;";
            str += "\r\nusing Newtonsoft.Json;";
            str += "\r\nusing Panuon.UI.Silver;";
            str += "\r\nusing Panuon.UI.Silver.Controls.Internal;";
            str += "\r\nusing System;";
            str += "\r\nusing System.Collections.Generic;";
            str += "\r\nusing System.Diagnostics;";
            str += "\r\nusing System.IO;";
            str += "\r\nusing System.Linq;";
            str += "\r\nusing System.Windows;";
            str += "\r\nusing System.Windows.Input;";
            str += "\r\nusing System.Windows.Interop;";
            str += "\r\nusing UIFrameworkCore;";
            str += "\r\nusing UIFrameworkCore.DependencyInjectionExtension;";
            str += "\r\nusing UIFrameworkCore.Helper;";
            str += "\r\nusing UIFrameworkCore.Interface;";
            str += "\r\nusing UIFrameworkCore.Model;";
            str += "\r\nusing UIFrameworkCore.Model.DataBase;";
            str += "\r\nusing UIFrameworkCore.Settings;";
            str += "\r\nusing UI框架.ViewModel;";
            str += "\r\nusing Button = System.Windows.Controls.Button;";
            str += "\r\n";
            str += "\r\nnamespace UI框架";
            str += "\r\n";
            str += "\r\n{";
            str += "\r\n   [NoProxy]";
            str += "\r\n   [Export(typeof(MainWindow))]";
            str += "\r\n   public partial class MainWindow";
            str += "\r\n   {";
            str += "\r\n";
            str += "\r\n       private Listener listener;";
            str += "\r\n       //This will hold our transfer client.";
            str += "\r\n       private TransferClient transferClient;";
            str += "\r\n       //This will hold our output folder.";
            str += "\r\n       private string outputFolder;";
            str += "\r\n       static string root_path = (System.AppDomain.CurrentDomain.BaseDirectory);";
            str += "\r\n       ViewModel.MainViewModel _viewModel;";
            str += "\r\n       Stopwatch stopwatch = new Stopwatch();";
            str += "\r\n       SimpleTCP.SimpleTcpServer SQLiteSever;";
            str += "\r\n";
            str += "\r\n       #region  UI框架 内置函数";
            str += "\r\n";
            str += "\r\n       private static void CallNoticeWindow(string message, string title, double? durationSeconds, MessageBoxIcon noticeIcon)";
            str += "\r\n       {";
            str += "\r\n           if (NoticeWindow.Instance == null)";
            str += "\r\n           {";
            str += "\r\n               var window = new NoticeWindow();";
            str += "\r\n               window.Show();";
            str += "\r\n           }";
            str += "\r\n           NoticeWindow.Instance.AddNotice(message, title);";
            str += "\r\n       }";
            str += "\r\n       void _messageBoxShow(string msg)";
            str += "\r\n       {";
            str += "\r\n           this.Dispatcher.Invoke(() => {";
            str += "\r\n               var result = MessageBoxX.Show(this,msg);";
            str += "\r\n           });";
            str += "\r\n       }";
            str += "\r\n";
            str += "\r\n       private void gridLoading_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)";
            str += "\r\n       {";
            str += "\r\n           if (gridLoading.Visibility == Visibility.Visible)";
            str += "\r\n           {";
            str += "\r\n               myLoad.IsLoading = true;";
            str += "\r\n           }";
            str += "\r\n           else";
            str += "\r\n           {";
            str += "\r\n               myLoad.IsLoading = false;";
            str += "\r\n           }";
            str += "\r\n       }";
            str += "\r\n";
            str += "\r\n       private void 键盘弹出(object sender, RoutedEventArgs e)";
            str += "\r\n       {";
            str += "\r\n           NumkeyBorad numkeyBoradTemp = new NumkeyBorad();";
            str += "\r\n           numkeyBoradTemp.Owner = this;";
            str += "\r\n";
            str += "\r\n           if (numkeyBoradTemp.ShowDialog() == true)";
            str += "\r\n           {";
            str += "\r\n               this.Close();";
            str += "\r\n           }";
            str += "\r\n       }";
            str += "\r\n       private void Window_Closed(object sender, EventArgs e)";
            str += "\r\n       {";
            str += "\r\n           SystemManager.Exit();";
            str += "\r\n       }";
            str += "\r\n       private void Window_KeyDown(object sender, System.Windows.Input.KeyEventArgs e)";
            str += "\r\n       {";
            str += "\r\n           if (e.Key == System.Windows.Input.Key.Escape)";
            str += "\r\n           {";
            str += "\r\n               NumkeyBorad numkeyBoradTemp = new NumkeyBorad();";
            str += "\r\n               numkeyBoradTemp.Owner = this;";
            str += "\r\n";
            str += "\r\n               if (numkeyBoradTemp.ShowDialog() == true)";
            str += "\r\n               {";
            str += "\r\n                   this.Close();";
            str += "\r\n               }";
            str += "\r\n           }";
            str += "\r\n       }";
            str += "\r\n       #endregion";
            str += "\r\n";
            str += "\r\n       public MainWindow()";
            str += "\r\n       {";
            str += "\r\n           #region 目录创建";
            str += "\r\n           if (!Directory.Exists(root_path + \"Logs\"))";
            str += "\r\n           {";
            str += "\r\n               Directory.CreateDirectory(root_path + \"Logs\");";
            str += "\r\n           }";
            str += "\r\n           if (!Directory.Exists(root_path + \"photo\"))";
            str += "\r\n           {";
            str += "\r\n               Directory.CreateDirectory(root_path + \"photo\");";
            str += "\r\n           }";
            str += "\r\n           if (!Directory.Exists(root_path + \"资源文件\"))";
            str += "\r\n           {";
            str += "\r\n               Directory.CreateDirectory(root_path + \"资源文件\");";
            str += "\r\n           }";
            str += "\r\n           #endregion";
            str += "\r\n";
            str += "\r\n           #region 开启数据库服务器";
            str += "\r\n           StartSqliteSever();";
            str += "\r\n           #endregion";
            str += "\r\n";
            str += "\r\n           InitializeComponent();";
            str += "\r\n";
            str += "\r\n           //DirectoryInfo bgm = new DirectoryInfo(root_path + \"背景音乐\");";
            str += "\r\n           //player.SoundLocation = bgm.GetFiles().FirstOrDefault().FullName;";
            str += "\r\n           //player.Load();";
            str += "\r\n           //player.Play();";
            str += "\r\n           // SqliteHelper.GetDbContext().DropTable<ModelExcel标准>();";
            str += "\r\n";
            str += "\r\n           _viewModel = new MainViewModel();";
            str += "\r\n           this.DataContext = _viewModel;";
            str += "\r\n";
            str += "\r\n           //开启文件传输服务";
            str += "\r\n           EftServer server = new EftServer(root_path+\"资源文件\", SettingManager.GetSettingSingleton().port文件传输端口);";
            str += "\r\n           System.Threading.Thread thread = new System.Threading.Thread(server.StartServer);";
            str += "\r\n           thread.Start();";
            str += "\r\n          ";
            str += "\r\n           myGrid.Children.Add(ServiceLocator.Instance.GetRequiredService<IControl>().Create());";
            str += "\r\n       }";
            str += "\r\n";
            str += "\r\n       void StartSqliteSever()";
            str += "\r\n       {";
            str += "\r\n           SQLiteSever = new SimpleTCP.SimpleTcpServer();";
            str += "\r\n           SQLiteSever.Start(SettingManager.GetSettingSingleton().port数据库同步端口);";
            str += "\r\n           SQLiteSever.DataReceived += SQLiteSever_DataReceived;";
            str += "\r\n       }";

            str += "\r\n       #region 代码生成  数据库查询缓存";
            Assembly assembly = Assembly.LoadFile(SettingManager.GetSettingSingleton().ExecutePath + "UIFrameworkCore.dll");
            Type[] _TypeList = assembly.GetTypes();
            for (int i = 0; i != _TypeList.Length; i++)
            {
                if (_TypeList[i].Namespace == "UIFrameworkCore.Model.DataBase")
                {
                    str += "\r\n       List<" + _TypeList[i].Name + "> AllList_" + _TypeList[i].Name + " = new List<" + _TypeList[i].Name + ">();";
                }
            }
            str += "\r\n       #endregion";
            str += "\r\n";
            str += "\r\n       private void SQLiteSever_DataReceived(object sender, SimpleTCP.Message e)";
            str += "\r\n       {";
            str += "\r\n           if (e.MessageString.Contains(\"MsgModelName\"))";
            str += "\r\n           {";
            str += "\r\n             ";
            str += "\r\n               SqliteSeverMsgModel msgModel = JsonConvert.DeserializeObject<SqliteSeverMsgModel>(e.MessageString);";
            str += "\r\n";
            str += "\r\n               #region 代码生成 数据库局 局域网后台交互";

            for (int i = 0; i != _TypeList.Length; i++)
            {
                if (_TypeList[i].Namespace == "UIFrameworkCore.Model.DataBase")
                {
                    str += "\r\n               if (msgModel.MsgModelName == \"" + _TypeList[i].Name + "\")";
                    str += "\r\n               {";
                    str += "\r\n";
                    str += "\r\n                   var msgData = JsonConvert.DeserializeObject<List<" + _TypeList[i].Name +" >>(msgModel.MsgModel);";
                    str += "\r\n                   switch (msgModel.MsgType)";
                    str += "\r\n                   {";
                    str += "\r\n                       case \"exit\":";
                    str += "\r\n";
                    str += "\r\n                           break;";
                    str += "\r\n                       case \"add\":";
                    str += "\r\n                           SqliteHelper.InsertList<" + _TypeList[i].Name +" >(msgData);";
                    str += "\r\n                           msgModel.MsgType = \"添加成功\";";
                    str += "\r\n                           SQLiteSever.Broadcast(JsonConvert.SerializeObject(msgModel));";
                    str += "\r\n                           break;";
                    str += "\r\n                       case \"delete\":";
                    str += "\r\n                           foreach (var item in msgData)";
                    str += "\r\n                           {";
                    str += "\r\n                               var deleteItem = SqliteHelper.GetDbContext().Table<" + _TypeList[i].Name +" >().Where(x => x.Id == item.Id).ToList().FirstOrDefault();";
                    str += "\r\n                               SqliteHelper.Delete<" + _TypeList[i].Name +" >(deleteItem);";
                    str += "\r\n                           }";
                    str += "\r\n                           msgModel.MsgType = \"删除成功\";";
                    str += "\r\n                           msgModel.MsgModel = null;";
                    str += "\r\n                           SQLiteSever.Broadcast(JsonConvert.SerializeObject(msgModel));";
                    str += "\r\n                           break;";
                    str += "\r\n                       case \"update\":";
                    str += "\r\n                           foreach (var item in msgData)";
                    str += "\r\n                           {";
                    str += "\r\n                               SqliteHelper.Update<" + _TypeList[i].Name +" >(item);";
                    str += "\r\n                           }";
                    str += "\r\n                           msgModel.MsgType = \"更新成功\";";
                    str += "\r\n                           SQLiteSever.Broadcast(JsonConvert.SerializeObject(msgModel));";
                    str += "\r\n                           break;";
                    str += "\r\n                       case \"query\":";
                    str += "\r\n                           var condition = msgData.FirstOrDefault();";
                    str += "\r\n                           AllList_" + _TypeList[i].Name +"  = SqliteHelper.GetDbContext().Table<" + _TypeList[i].Name +" >().Where(x => x.SearchCondition.Contains(condition.SearchCondition)).ToList();";
                    str += "\r\n                            var resultList = AllList_" + _TypeList[i].Name +" .Skip(msgModel.PageCount * (msgModel.PageInex - 1)).Take(msgModel.PageCount).ToList();";
                    str += "\r\n                            msgModel.MsgType = \"queryresult\";";
                    str += "\r\n                            msgModel.MsgModel = JsonConvert.SerializeObject(resultList);";
                    str += "\r\n                            msgModel.PageTotalCount = AllList_" + _TypeList[i].Name +" .Count / msgModel.PageCount;";
                    str += "\r\n                            if (msgModel.PageTotalCount == 0 || AllList_" + _TypeList[i].Name +" .Count % msgModel.PageCount > 0)";
                    str += "\r\n                            {";
                    str += "\r\n                                msgModel.PageTotalCount += 1;";
                    str += "\r\n                            }";
                    str += "\r\n                            SQLiteSever.Broadcast(JsonConvert.SerializeObject(msgModel));";
                    str += "\r\n                            break;";
                    str += "\r\n                        case \"queryPage\":";
                    str += "\r\n                            msgModel.MsgType = \"queryresult\";";
                    str += "\r\n                            msgModel.MsgModel = JsonConvert.SerializeObject(AllList_" + _TypeList[i].Name +" .Skip(msgModel.PageCount * (msgModel.PageInex - 1)).Take(msgModel.PageCount).ToList());";
                    str += "\r\n                            SQLiteSever.Broadcast(JsonConvert.SerializeObject(msgModel));";
                    str += "\r\n                            break;";
                    str += "\r\n                    }";
                    str += "\r\n                }";
                }
            }
          
            str += "\r\n                #endregion";
            str += "\r\n";
            str += "\r\n            }";
            str += "\r\n        }";
            str += "\r\n";
            str += "\r\n";
            str += "\r\n        private void ButtonMin_Click(object sender, RoutedEventArgs e)";
            str += "\r\n        {";
            str += "\r\n            var temp = sender as Button;";
            str += "\r\n            switch (temp.Name)";
            str += "\r\n            {";
            str += "\r\n                case \"Min\":";
            str += "\r\n                    this.WindowState = WindowState.Minimized;";
            str += "\r\n                    break;";
            str += "\r\n                case \"Max\":";
            str += "\r\n                    var window = Window.GetWindow(this);//获取当前主窗口";
            str += "\r\n                    var intPtr = new WindowInteropHelper(window).Handle;//获取当前窗口的句柄";
            str += "\r\n                    var screen = System.Windows.Forms.Screen.FromHandle(intPtr);//获取当前屏幕";
            str += "\r\n                    this.Left = screen.Bounds.Left / SettingManager.GetSettingSingleton().DPIRate;";
            str += "\r\n                    this.Top = screen.Bounds.Top / SettingManager.GetSettingSingleton().DPIRate;";
            str += "\r\n                    this.Height = screen.WorkingArea.Height / SettingManager.GetSettingSingleton().DPIRate;";
            str += "\r\n                    this.Width = screen.WorkingArea.Width / SettingManager.GetSettingSingleton().DPIRate;";
            str += "\r\n                    Max.Visibility = Visibility.Collapsed;";
            str += "\r\n                    Full.Visibility = Visibility.Visible;";
            str += "\r\n";
            str += "\r\n                    break;";
            str += "\r\n                case \"Full\":";
            str += "\r\n                    this.WindowState = WindowState.Normal;";
            str += "\r\n                    this.Width = SettingManager.GetSettingSingleton().normalWidth;";
            str += "\r\n                    this.Height = SettingManager.GetSettingSingleton().normalHeight;";
            str += "\r\n                    this.Left = SettingManager.GetSettingSingleton().normalLeft;";
            str += "\r\n                    this.Top = SettingManager.GetSettingSingleton().normalTop;";
            str += "\r\n                    Full.Visibility = Visibility.Collapsed;";
            str += "\r\n                    Max.Visibility = Visibility.Visible;";
            str += "\r\n                    this.Topmost = false;";
            str += "\r\n                    break;";
            str += "\r\n                case \"Close\":";
            str += "\r\n                        SystemManager.Exit();";
            str += "\r\n                    break;";
            str += "\r\n            }";
            str += "\r\n        }";
            str += "\r\n";
            str += "\r\n        private void Window_MouseLeftButtonDown(object sender, System.Windows.Input.MouseButtonEventArgs e)";
            str += "\r\n        {";
            str += "\r\n            var window = Window.GetWindow(this);//获取当前主窗口";
            str += "\r\n            var intPtr = new WindowInteropHelper(window).Handle;//获取当前窗口的句柄";
            str += "\r\n            var screen = System.Windows.Forms.Screen.FromHandle(intPtr);//获取当前屏幕";
            str += "\r\n            if (e.LeftButton == MouseButtonState.Pressed)";
            str += "\r\n            {";
            str += "\r\n                if (this.Height != screen.WorkingArea.Height)";
            str += "\r\n                {";
            str += "\r\n                    DragMove();";
            str += "\r\n                }";
            str += "\r\n            }";
            str += "\r\n            else";
            str += "\r\n            {";
            str += "\r\n";
            str += "\r\n            }";
            str += "\r\n            if (e.ClickCount == 2)";
            str += "\r\n            {";
            str += "\r\n                if (this.Height != screen.WorkingArea.Height / SettingManager.GetSettingSingleton().DPIRate && this.Width != screen.WorkingArea.Width / SettingManager.GetSettingSingleton().DPIRate)";
            str += "\r\n                {";
            str += "\r\n                    SettingManager.GetSettingSingleton().normalHeight = this.Height;";
            str += "\r\n                    SettingManager.GetSettingSingleton().normalWidth = this.Width;";
            str += "\r\n                    SettingManager.GetSettingSingleton().normalLeft = this.Left;";
            str += "\r\n                    SettingManager.GetSettingSingleton().normalTop = this.Top;";
            str += "\r\n";
            str += "\r\n                    this.Height = screen.WorkingArea.Height / SettingManager.GetSettingSingleton().DPIRate;";
            str += "\r\n                    this.Width = screen.WorkingArea.Width / SettingManager.GetSettingSingleton().DPIRate;";
            str += "\r\n                    this.Left = screen.WorkingArea.Left;";
            str += "\r\n                    this.Top = screen.WorkingArea.Top;";
            str += "\r\n                    Max.Visibility = Visibility.Collapsed;";
            str += "\r\n                    Full.Visibility = Visibility.Visible;";
            str += "\r\n                }";
            str += "\r\n                else";
            str += "\r\n                {";
            str += "\r\n                    this.WindowState = WindowState.Normal;";
            str += "\r\n                    this.Left = SettingManager.GetSettingSingleton().normalLeft;";
            str += "\r\n                    this.Top = SettingManager.GetSettingSingleton().normalTop;";
            str += "\r\n                    this.Height = SettingManager.GetSettingSingleton().normalHeight;";
            str += "\r\n                    this.Width = SettingManager.GetSettingSingleton().normalWidth;";
            str += "\r\n                    Full.Visibility = Visibility.Collapsed;";
            str += "\r\n                    Max.Visibility = Visibility.Visible;";
            str += "\r\n                }";
            str += "\r\n            }";
            str += "\r\n        }";
            str += "\r\n    }";
            str += "\r\n";
            str += "\r\n}";
            str += "\r\n";
            str += "\r\n";

            UIFrameworkCore.Helper.FileHelper.SaveFile_Create(SettingManager.GetSettingSingleton().ExecutePath.Split(new string[] { "自动生成数据库后台管理程序" }, StringSplitOptions.RemoveEmptyEntries)[0]+@"WPFUI框架\MainWindow.xaml.cs", str);
        }

        static void 修改管理中心首页()
        {
            string str = "";
            str += "\r\nusing System.Collections.Generic;";
            str += "\r\nusing System.Windows.Controls;";
            str += "\r\nusing UIFrameworkCore.DependencyInjectionExtension;";
            str += "\r\nusing UIFrameworkCore.Emnu;";
            str += "\r\n";
            str += "\r\nnamespace Plugins.ManageCenter";
            str += "\r\n{";
            str += "\r\n    [NoProxy]";
            str += "\r\n    [Export(typeof(ManagerCenterControl))]";
            str += "\r\n    public partial class ManagerCenterControl : UserControl";
            str += "\r\n    {";
            str += "\r\n        public ManagerCenterControl()";
            str += "\r\n        {";
            str += "\r\n            InitializeComponent();";
            str += "\r\n            tabMain.Items.Clear();";
            str += "\r\n            Auto.GenerarteDataBase.GenerateDataBase();";
            str += "\r\n            #region 代码动态生成控件";
            Assembly assembly = Assembly.LoadFile(SettingManager.GetSettingSingleton().ExecutePath + "UIFrameworkCore.dll");
            Type[] _TypeList = assembly.GetTypes();
            for (int i = 0; i != _TypeList.Length; i++)
            {
                if (_TypeList[i].Namespace == "UIFrameworkCore.Model.DataBase")
                {
                    str += "\r\n            TabItem tabItem"+_TypeList[i].Name+" = new TabItem();";
                    str += "\r\n            tabItem" + _TypeList[i].Name + ".Height = " +60+";";
                    str += "\r\n            tabItem" + _TypeList[i].Name + ".Header = \"" + _TypeList[i].Name+"\";" ;
                    str += "\r\n            tabItem" + _TypeList[i].Name + ".Content = new " + _TypeList[i].Name + "PageControl();";
                    str += "\r\n            tabMain.Items.Add(tabItem" + _TypeList[i].Name + ");";
                }
            }
        
            str += "\r\n            #endregion";
            str += "\r\n";
            str += "\r\n            var type = typeof(Level);";
            str += "\r\n            var propList = type.GetProperties();";
            str += "\r\n            List<PropertyInfoWrapper> wrappers = new List<PropertyInfoWrapper>();";
            str += "\r\n            foreach (var item in propList)";
            str += "\r\n            {";
            str += "\r\n                wrappers.Add(new PropertyInfoWrapper()";
            str += "\r\n                {";
            str += "\r\n                    PropertyInfo = item,";
            str += "\r\n                    OwnerObject = type";
            str += "\r\n                });";
            str += "\r\n            }";
            str += "\r\n";
            str += "\r\n        }";
            str += "\r\n    }";
            str += "\r\n}";
            str += "\r\n";

          
            UIFrameworkCore.Helper.FileHelper.SaveFile_Create(SettingManager.GetSettingSingleton().ExecutePath.Split(new string[] { "自动生成数据库后台管理程序" }, StringSplitOptions.RemoveEmptyEntries)[0]+@"Plugins.ManageCenter\ManagerCenterControl.xaml.cs", str);
        }

    }


}
