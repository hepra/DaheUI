<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell">
    <SolidColorBrush x:Key="niceBlack" Color="#333"></SolidColorBrush>
    <SolidColorBrush x:Key="niceBlackEnable" Color="#FF3366"></SolidColorBrush>
    <SolidColorBrush x:Key="niceTextColor" Color="#666666"></SolidColorBrush>
    <SolidColorBrush x:Key="niceBackground" Color="#F6F6F8"></SolidColorBrush>
    <SolidColorBrush x:Key="niceGray" Color="#E6E7EA"></SolidColorBrush>
    <SolidColorBrush x:Key="niceHover" Color="#ADADB4"></SolidColorBrush>
    <SolidColorBrush x:Key="niceBlue" Color="#66CCFF"></SolidColorBrush>


    <!--#region ListBox -->

    <Style TargetType="ListBoxItem" x:Key="ListBoxItemEmptyTemplate1234">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="BorderBackground"  BorderBrush="Transparent" CornerRadius="5" BorderThickness="1" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="BorderBackground"  Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region TextBox -->
    <Style x:Key="myTextBox"   TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <!--<Setter Property="BorderBrush" Value="#FFABADB3"/>-->
        <Setter Property="Foreground" Value="#333"/>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <!--<Setter Property="BorderThickness" Value="1"/>-->
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Tag" Value="请输入内容"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="4">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled"/>
                            <TextBlock x:Name="WARKTEXT" Text="{TemplateBinding Tag}" Foreground="#999999" Visibility="Collapsed" VerticalAlignment="Center" Margin="8,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WARKTEXT" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                    <Condition Property="IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource myTextBox}"/>

    <!--#endregion-->

    <!--#region RadioButton -->
    <Style TargetType="RadioButton">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#ACABAB"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid  x:Name="grid"  Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Background="Transparent">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Border  x:Name="border" BorderBrush="#ACABAB" BorderThickness="1"  Width="16" Height="16"   CornerRadius="8">
                                <Grid Background="Transparent">
                                    <Ellipse  VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                x:Name="backGround" Width="8" Height="8" Fill="Transparent" ></Ellipse>
             
                                </Grid>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center" Margin="5,0,0,0"  Content="{TemplateBinding Content }">
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsChecked" Value="true">
                            <Setter  TargetName="backGround" Property="Fill" Value="#1E9FFF"/>
                            <Setter  Property="Foreground" Value="#1E9FFF"/>
                            <Setter  TargetName="border" Property="BorderThickness" Value="1"/>
                            <Setter  TargetName="border" Property="BorderBrush" Value="#1E9FFF"/>
                        </Trigger>
                        <Trigger  Property="IsChecked" Value="False">
                            <Setter  TargetName="backGround" Property="Fill" Value="Transparent"/>
                            <Setter  TargetName="backGround" Property="Fill" Value="#ACABAB"/>
                            <Setter  Property="Foreground" Value="#ACABAB"/>
                            <Setter  TargetName="border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Expander -->
    
    <!--#endregion-->

    <!--#region ProgressBar -->
    
    <!--#endregion-->

    <!--#region CheckBox -->
    <Style TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#ACABAB"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid  x:Name="grid"  Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Background="Transparent">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Border  x:Name="border" BorderBrush="#ACABAB" BorderThickness="1"  Width="16" Height="16">
                                <Grid Background="Transparent">
                                    <Rectangle  VerticalAlignment="Center" HorizontalAlignment="Center"
                                                x:Name="backGround" Width="18" Height="18" Fill="Transparent" ></Rectangle>
                                    <TextBlock  x:Name="text"  Text="✔" VerticalAlignment="Center" HorizontalAlignment="Center"
                                        FontSize="10" FontWeight="Light" Background="Transparent"
                                        Foreground="White"/>
                                </Grid>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center" Margin="5,0,0,0"  Content="{TemplateBinding Content }">
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsChecked" Value="true">
                            <Setter  TargetName="backGround" Property="Fill" Value="#1E9FFF"/>
                            <Setter  Property="Foreground" Value="#1E9FFF"/>
                            <Setter  TargetName="text" Property="Visibility" Value="Visible"/>
                            <Setter  TargetName="border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger  Property="IsChecked" Value="False">
                            <Setter  TargetName="backGround" Property="Fill" Value="Transparent"/>
                            <Setter  TargetName="text" Property="Visibility" Value="Hidden"/>
                            <Setter  TargetName="border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="CheckBox" x:Key="Switch_Style">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#ACABAB"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid  x:Name="grid"  Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Background="Transparent">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Border  x:Name="border" BorderBrush="Transparent" BorderThickness="0"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                                <Image x:Name="ImgControl" Source="/Plugins.ManageCenter;component/view/img/开关关.png" Stretch="Uniform"></Image>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center" Margin="5,0,0,0"  Content="{TemplateBinding Content }">
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsChecked" Value="true">
                            <Setter  TargetName="ImgControl" Property="Source" Value="/Plugins.ManageCenter;component/view/img/开关开.png"/>
                            <Setter  Property="Foreground" Value="#1E9FFF"/>
                        </Trigger>
                        <Trigger  Property="IsChecked" Value="False">
                            <Setter  TargetName="ImgControl" Property="Source" Value="/Plugins.ManageCenter;component/view/img/开关关.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Combox -->

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter  Property="OverridesDefaultStyle" Value="True"/>
        <Setter  Property="IsTabStop" Value="False"/>
        <Setter  Property="Focusable" Value="False"/>
        <Setter  Property="ClickMode" Value="Press"/>
        <Setter  Property="Background" Value="Transparent"/>
        <Setter  Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ToggleButton}">
                    <Border  Background="Transparent" CornerRadius="4">

                        <Image Source="/Plugins.ManageCenter;component/view/img/下拉按钮.png" Width="15" Height="10" HorizontalAlignment="Right"  Margin="0,0,20,0"></Image>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="StyleofLeftPanel_Combox" TargetType="ComboBox">
        <Style.Setters>
            <Setter Property="Cursor"  Value="Hand"></Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <!--  ComBoxItem  -->
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="MinHeight" Value="22" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="MinWidth" Value="60" />
                        <Setter Property="Foreground" Value="#A6A6A6" />
                        <Setter Property="Cursor"  Value="Hand"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border
                                    Name="Back"
                                    Padding="10"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="0,0,0,0">
                                        <ContentPresenter
                                        Margin="0,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        ContentSource="{Binding Source}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="FontSize"  Value="18" />
                                            <Setter Property="Foreground"  Value="Black" />
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="Transparent" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="#FF4C97" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border  CornerRadius="4" Background="#F1F1F1">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="0" Background="#F1F1F1" CornerRadius="0,0,6,6">
                                            <ScrollViewer x:Name="DropDownScrollViewer" >
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                <ContentPresenter Grid.Column="0" x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>


                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    
    <!--#endregion-->

    <!--#region Button -->
    <Style  TargetType="Button">
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="Comic Sans MS"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Background" Value="#6699FF"></Setter>
        <Setter Property="Foreground" Value="#ffffff"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding Background}" BorderThickness="1" CornerRadius="9" Name="PART_Background">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#66CCFF" Offset="0.0" />
                                    <GradientStop Color="#66CCFF" Offset="0.5" />
                                    <GradientStop Color="#66CCFF" Offset="0.0" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7"  TargetName="DisabledVisualElement"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Scrollviewer -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <!--  滚动条背景色  -->
                        <Rectangle
                            Fill="#FFF"
                            RadiusX="5"
                            RadiusY="5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AduScrollbar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,1,1,0" />
        <!--  滚动条宽度  -->
        <Setter Property="Width" Value="8" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Track
                            x:Name="PART_Track"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"  Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="1,0,6,1" />
                <Setter Property="Height" Value="10" />
                <Setter Property="MinHeight" Value="10" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style  x:Key="AduScrollViewer" TargetType="ScrollViewer">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter
                                Margin="{TemplateBinding Padding}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Cursor="{TemplateBinding Cursor}" />
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                HorizontalAlignment="Right"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                Orientation="Vertical"
                                Style="{StaticResource AduScrollbar}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="Collapsed"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                VerticalAlignment="Bottom"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                Style="{StaticResource AduScrollbar}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                        </Grid>
                    </Border>
                    <!--<ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0:0:1" />
                                    <DoubleAnimation
                                        BeginTime="0:0:1"
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.5"
                                        Duration="0:0:1" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0:0:1" />
                                    <DoubleAnimation
                                        BeginTime="0:0:1"
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.5"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region DataGrid -->
    <Style TargetType="DataGrid">
        <!--网格线颜色-->
        <Setter Property="CanUserResizeColumns" Value="false"/>
        <Setter Property="Background" Value="#F1F1F1" />
        <Setter Property="BorderBrush" Value="{StaticResource niceBlack}" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#E6E7EA"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#E6E7EA"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--标题栏样式-->
    <!--<Style  TargetType="DataGridColumnHeader" >
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="White" />
        <Setter  Property="FontWeight"  Value="Bold"/>
    </Style>-->

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="60" />
        <Setter Property="Foreground" Value="#323433" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" 
                             BorderBrush="#666" 
                              Width="Auto">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter  Margin="10,5,10,5" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <!--<Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"  Grid.Column="2" Width="8" Height="6" Fill="White" Margin="0,0,50,0" 
                            VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                            <Rectangle Width="1" Fill="#d6c79b" HorizontalAlignment="Right" Grid.ColumnSpan="1" />-->
                            <!--<TextBlock  Background="Red">
                            <ContentPresenter></ContentPresenter></TextBlock>-->
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="40"/>
    </Style>
    <!--行样式触发-->
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style  TargetType="DataGridRow">
        <Setter Property="Background" Value="#F1F1F1" />
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Foreground" Value="#333" />
        <Style.Triggers>
            <!--隔行换色-->
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#e7e7e7" />
            </Trigger>
            <!--<Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#f2f2f2" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                --><!--<Setter Property="Foreground" Value="White"/>--><!--
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <!--单元格样式触发-->
    <Style TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock TextAlignment="Center" VerticalAlignment="Center"  >
                           <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{StaticResource niceBlue}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

</ResourceDictionary>