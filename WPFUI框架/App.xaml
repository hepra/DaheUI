<Application x:Class="TestAndCertitfication.App"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:converter="clr-namespace:UI框架.converter"
                 xmlns:Control="clr-namespace:ControlLib;assembly=NumericUpDown"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Control.xaml" />
                <ResourceDictionary Source="/Styles/Base.xaml" />
                <ResourceDictionary Source="/Styles/CommonStyles.xaml" />
                <ResourceDictionary Source="/Styles/ResourceDictionary.xaml" />
                <ResourceDictionary Source="/Styles/DatePicker.xaml" />
                <ResourceDictionary Source="/Styles/GlassButton.xaml" />
                <ResourceDictionary Source="/Styles/GlassButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--<FontFamily x:Key="kaiti">/Presentation/#kaiti</FontFamily>-->
            <converter:BrushToColorConverter x:Key="BrushToColorConverter" />
            <converter:HalfConverter x:Key="HalfConverter" />

            <Style TargetType="TextBlock" x:Key="my小号字">
                <Setter Property="Foreground" Value="#F4F4F4"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="FontFamily" Value="微软雅黑"></Setter>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                <Setter Property="TextWrapping" Value="Wrap"></Setter>
            </Style>
            <Style TargetType="TextBlock" x:Key="my中号字">
                <Setter Property="Foreground" Value="#F4F4F4"></Setter>
                <Setter Property="FontSize" Value="18"></Setter>
                <Setter Property="FontFamily" Value="微软雅黑"></Setter>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
            </Style>
            <Style TargetType="TextBlock" x:Key="my大号字">
                <Setter Property="Foreground" Value="#F4F4F4"></Setter>
                <Setter Property="FontSize" Value="22"></Setter>
                <Setter Property="FontFamily" Value="微软雅黑"></Setter>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
            </Style>
            <Style TargetType="TextBlock" x:Key="myTextModifyDabaseData">
                <Setter Property="Foreground" Value="#333"></Setter>
                <Setter Property="FontSize" Value="30"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
                <Setter Property="FontFamily" Value="微软雅黑"></Setter>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                <Setter Property="Margin" Value="50,0"></Setter>
                <Setter Property="TextAlignment" Value="Right"></Setter>
            </Style>
            <SolidColorBrush x:Key="NiceBlue" Color="#1E9FFF" />
            <SolidColorBrush x:Key="NiceRed" Color="#D40000" />
            <SolidColorBrush x:Key="NiceGreen" Color="#009688" />
            <SolidColorBrush x:Key="NiceGray" Color="Gray" />
            
            <SolidColorBrush x:Key="FontColor" Color="White" />
            <LinearGradientBrush  x:Key="red渐变画刷" StartPoint="1,0" EndPoint="1,1">
                <GradientStop Color="#21DDE6" Offset="0" />
                <GradientStop Color="#21DDE6" Offset="0.5" />
                <GradientStop Color="#4795D1" Offset="0.5" />
                <GradientStop Color="#4795D1" Offset="1" />
            </LinearGradientBrush>



            <!--#region UpDown -->
            <Style x:Key="styleNumericUpDown"  TargetType="{x:Type Control:NumericUpDown}">
                <Setter Property="Control:NumericUpDown.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control:NumericUpDown}">
                            <Border Background="#F4F4F4" BorderBrush="{StaticResource NiceBlue}" BorderThickness="1" CornerRadius="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="120"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <RepeatButton x:Name="PART_ButtonUp"  FontSize="60"  Margin="5" BorderThickness="0" 
                                                      BorderBrush="Transparent" Grid.Row="0" Content="▲" Background="#F4F4F4" Foreground="{StaticResource NiceBlue}" Padding="-15"/>
                                        <RepeatButton x:Name="PART_ButtonDown" FontSize="60"  Margin="5"  
                                                      BorderThickness="0" BorderBrush="Transparent" Grid.Row="1" Content="▼" Background="#F4F4F4"  Foreground="{StaticResource NiceBlue}"  Padding="-15" />
                                    </Grid>
                                    <TextBox x:Name="PART_TextBox" Background="Transparent" FontSize="50" BorderThickness="0"  IsReadOnly="True" Grid.Column="0" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#endregion-->

            <!--#region TextBox -->
            <Style x:Key="myTextBox"   TargetType="TextBox">
                <Setter Property="Background" Value="White"/>
                <!--<Setter Property="BorderBrush" Value="#FFABADB3"/>-->
                <Setter Property="Foreground" Value="#333"/>
                <!--<Setter Property="BorderThickness" Value="1"/>-->
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="Tag" Value="请输入内容"/>
                <Setter Property="AcceptsReturn" Value="True"/>
                <Setter Property="AcceptsTab" Value="True"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="4">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled"/>
                                    <TextBlock x:Name="WARKTEXT" Text="{TemplateBinding Tag}" Foreground="#999999" Visibility="Collapsed" VerticalAlignment="Center" Margin="8,0,0,0"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Text" Value=""/>
                                        <Condition Property="IsFocused" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="WARKTEXT" Value="Visible"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                            <Condition Property="IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBox" BasedOn="{StaticResource myTextBox}"/>

            <!--#endregion-->


            <!--#region 取消ListBox样式 -->
            <Style TargetType="ListBoxItem" x:Key="ListBoxItemEmptyTemplate1234">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="BorderBackground"  BorderBrush="Transparent" CornerRadius="5" BorderThickness="1" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="BorderBackground"  Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>

                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="true">
                        <Setter Property="Background" Value="Transparent"></Setter>
                        <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="true">
                        <Setter Property="Background" Value="Transparent"></Setter>
                        <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--#endregion-->


        </ResourceDictionary>

    </Application.Resources>
</Application>
